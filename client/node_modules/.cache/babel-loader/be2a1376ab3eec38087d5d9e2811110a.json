{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/src/scenes/Profile/index.tsx\";\n/*import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ME_QUERY } from '../../graphql/Profile';\nimport { userInterface } from '../../interface/interfaces';\n\nexport const Profile = () => {\n  const { loading, error, data } = useQuery(ME_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n  if (!data || !data.me || !Array.isArray(data.me))\n    return <p>No data available</p>;\n\n  return (\n    <div>\n      {data.me.map((row: userInterface) => (\n        <h1 key={row.firstName}>{row.firstName}</h1>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;  */\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport var IS_LOGGED_IN = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nquery{\\n  me{\\n    username\\n    firstName\\n  }\\n}\\n\"])));\nexport var Profile = function Profile() {\n  var _useQuery = useQuery(IS_LOGGED_IN),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  var navigate = useNavigate();\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  console.log(data);\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }\n  }, error.message);\n  if (!data.me) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, navigate(\"/\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, data);\n};\nexport default Profile;","map":{"version":3,"names":["gql","useQuery","React","useNavigate","IS_LOGGED_IN","_templateObject","_taggedTemplateLiteral","Profile","_useQuery","loading","error","data","navigate","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","console","log","message","me","Fragment"],"sources":["/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/src/scenes/Profile/index.tsx"],"sourcesContent":["/*import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ME_QUERY } from '../../graphql/Profile';\nimport { userInterface } from '../../interface/interfaces';\n\nexport const Profile = () => {\n  const { loading, error, data } = useQuery(ME_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n  if (!data || !data.me || !Array.isArray(data.me))\n    return <p>No data available</p>;\n\n  return (\n    <div>\n      {data.me.map((row: userInterface) => (\n        <h1 key={row.firstName}>{row.firstName}</h1>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;  */\n\nimport { gql, useQuery } from \"@apollo/client\"\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport const IS_LOGGED_IN = gql`\nquery{\n  me{\n    username\n    firstName\n  }\n}\n`\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const Profile = () => {\n    const { loading, error, data } = useQuery(IS_LOGGED_IN)\n\n    const navigate = useNavigate();\n    if (loading) return <p>Loading...</p>\n    console.log(data);\n    if (error)\n        return <p>{error.message}</p>\n\n    if (!data.me) {\n        return <>{navigate(\"/\")}</>\n        \n    }\n\n    return <>{data}</>\n}\n\nexport default Profile"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,IAAMC,YAAY,GAAGJ,GAAG,CAAAK,eAAA,KAAAA,eAAA,GAAAC,sBAAA,8DAO9B;AAMD,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACQP,QAAQ,CAACG,YAAY,CAAC;IAA/CK,OAAO,GAAAD,SAAA,CAAPC,OAAO;IAAEC,KAAK,GAAAF,SAAA,CAALE,KAAK;IAAEC,IAAI,GAAAH,SAAA,CAAJG,IAAI;EAE5B,IAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAIM,OAAO,EAAE,oBAAOP,KAAA,CAAAW,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EACrCC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EACjB,IAAID,KAAK,EACL,oBAAOR,KAAA,CAAAW,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIV,KAAK,CAACa,OAAW,CAAC;EAEjC,IAAI,CAACZ,IAAI,CAACa,EAAE,EAAE;IACV,oBAAOtB,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAuB,QAAA,QAAGb,QAAQ,CAAC,GAAG,CAAI,CAAC;EAE/B;EAEA,oBAAOV,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAuB,QAAA,QAAGd,IAAO,CAAC;AACtB,CAAC;AAED,eAAeJ,OAAO"},"metadata":{},"sourceType":"module"}