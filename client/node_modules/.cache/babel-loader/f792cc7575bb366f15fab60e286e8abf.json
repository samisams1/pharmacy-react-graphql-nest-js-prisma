{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/src/scenes/Profile/index.tsx\";\n/*import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ME_QUERY } from '../../graphql/Profile';\nimport { userInterface } from '../../interface/interfaces';\n\nexport const Profile = () => {\n  const { loading, error, data } = useQuery(ME_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n  if (!data || !data.me || !Array.isArray(data.me))\n    return <p>No data available</p>;\n\n  return (\n    <div>\n      {data.me.map((row: userInterface) => (\n        <h1 key={row.firstName}>{row.firstName}</h1>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;  */\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nexport var IS_LOGGED_IN = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nquery{\\n  me{\\n    username\\n    firstName\\n  }\\n}\\n\"])));\nexport var Profile = function Profile() {\n  var _useQuery = useQuery(IS_LOGGED_IN),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  console.log(data);\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, error.message);\n  if (!data.me) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"samisams\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, data.me.map(function (row) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      key: row.firstName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, row.firstName);\n  })));\n};\nexport default Profile;","map":{"version":3,"names":["gql","useQuery","React","IS_LOGGED_IN","_templateObject","_taggedTemplateLiteral","Profile","_useQuery","loading","error","data","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","console","log","message","me","Fragment","map","row","key","firstName"],"sources":["/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/src/scenes/Profile/index.tsx"],"sourcesContent":["/*import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ME_QUERY } from '../../graphql/Profile';\nimport { userInterface } from '../../interface/interfaces';\n\nexport const Profile = () => {\n  const { loading, error, data } = useQuery(ME_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n  if (!data || !data.me || !Array.isArray(data.me))\n    return <p>No data available</p>;\n\n  return (\n    <div>\n      {data.me.map((row: userInterface) => (\n        <h1 key={row.firstName}>{row.firstName}</h1>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;  */\n\nimport { gql, useQuery } from \"@apollo/client\"\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport { userInterface } from \"../../interface/interfaces\";\n\n\nexport const IS_LOGGED_IN = gql`\nquery{\n  me{\n    username\n    firstName\n  }\n}\n`\n\ninterface Props {\n    children?: React.ReactNode\n}\n\nexport const Profile = () => {\n    const { loading, error, data } = useQuery(IS_LOGGED_IN)\n    if (loading) return <p>Loading...</p>\n    console.log(data);\n    if (error)\n        return <p>{error.message}</p>\n\n    if (!data.me) {\n        return <>samisams</>\n        \n    }\n\n    return <>\n     <div>\n    {data.me.map((row: any) => (\n      <h1 key={row.firstName}>{row.firstName}</h1>\n    ))}\n  </div>\n    </>\n\n    \n}\n\nexport default Profile"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAKzB,OAAO,IAAMC,YAAY,GAAGH,GAAG,CAAAI,eAAA,KAAAA,eAAA,GAAAC,sBAAA,8DAO9B;AAMD,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACQN,QAAQ,CAACE,YAAY,CAAC;IAA/CK,OAAO,GAAAD,SAAA,CAAPC,OAAO;IAAEC,KAAK,GAAAF,SAAA,CAALE,KAAK;IAAEC,IAAI,GAAAH,SAAA,CAAJG,IAAI;EAC5B,IAAIF,OAAO,EAAE,oBAAON,KAAA,CAAAS,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EACrCC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EACjB,IAAID,KAAK,EACL,oBAAOP,KAAA,CAAAS,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIT,KAAK,CAACY,OAAW,CAAC;EAEjC,IAAI,CAACX,IAAI,CAACY,EAAE,EAAE;IACV,oBAAOpB,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAqB,QAAA,QAAE,UAAU,CAAC;EAExB;EAEA,oBAAOrB,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAqB,QAAA,qBACNrB,KAAA,CAAAS,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACAR,IAAI,CAACY,EAAE,CAACE,GAAG,CAAC,UAACC,GAAQ;IAAA,oBACpBvB,KAAA,CAAAS,aAAA;MAAIe,GAAG,EAAED,GAAG,CAACE,SAAU;MAAAf,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEO,GAAG,CAACE,SAAc,CAAC;EAAA,CAC7C,CACE,CACD,CAAC;AAGP,CAAC;AAED,eAAerB,OAAO"},"metadata":{},"sourceType":"module"}