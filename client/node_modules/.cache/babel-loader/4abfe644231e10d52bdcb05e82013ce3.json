{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TssCacheProvider = exports.useTssEmotionCache = exports.getTssDefaultEmotionCache = exports.getDoExistsTssDefaultEmotionCacheMemoizedValue = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar cache_1 = __importDefault(require(\"@emotion/cache\"));\nvar _ref = function () {\n    var propertyKey = \"__tss-react_context\";\n    var peerDepObj =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    react_1.createContext;\n    var sharedContext = peerDepObj[\"__tss-react_context\"];\n    if (sharedContext === undefined) {\n      var _ref2 = function () {\n          var cache = undefined;\n          /**\n           * Lazily initialized singleton\n           * If doReset is set to true the memoized instance will be\n           * discarded and a new one created.\n           * */\n          function getTssDefaultEmotionCache(params) {\n            var _ref3 = params !== null && params !== void 0 ? params : {},\n              _ref3$doReset = _ref3.doReset,\n              doReset = _ref3$doReset === void 0 ? false : _ref3$doReset;\n            if (doReset) {\n              cache = undefined;\n            }\n            if (cache === undefined) {\n              cache = (0, cache_1.default)({\n                \"key\": \"tss\"\n              });\n            }\n            return cache;\n          }\n          return {\n            getTssDefaultEmotionCache: getTssDefaultEmotionCache,\n            \"getDoExistsTssDefaultEmotionCacheMemoizedValue\": function getDoExistsTssDefaultEmotionCacheMemoizedValue() {\n              return cache !== undefined;\n            }\n          };\n        }(),\n        _getTssDefaultEmotionCache = _ref2.getTssDefaultEmotionCache,\n        _getDoExistsTssDefaultEmotionCacheMemoizedValue = _ref2.getDoExistsTssDefaultEmotionCacheMemoizedValue;\n      sharedContext = {\n        getTssDefaultEmotionCache: _getTssDefaultEmotionCache,\n        getDoExistsTssDefaultEmotionCacheMemoizedValue: _getDoExistsTssDefaultEmotionCacheMemoizedValue,\n        \"reactContext\": (0, react_1.createContext)(undefined)\n      };\n      Object.defineProperty(peerDepObj, propertyKey, {\n        \"configurable\": false,\n        \"enumerable\": false,\n        \"writable\": false,\n        \"value\": sharedContext\n      });\n    }\n    return sharedContext;\n  }(),\n  getDoExistsTssDefaultEmotionCacheMemoizedValue = _ref.getDoExistsTssDefaultEmotionCacheMemoizedValue,\n  getTssDefaultEmotionCache = _ref.getTssDefaultEmotionCache,\n  reactContext = _ref.reactContext;\nexports.getDoExistsTssDefaultEmotionCacheMemoizedValue = getDoExistsTssDefaultEmotionCacheMemoizedValue;\nexports.getTssDefaultEmotionCache = getTssDefaultEmotionCache;\nfunction useTssEmotionCache() {\n  var cacheExplicitlyProvidedForTss = (0, react_1.useContext)(reactContext);\n  return cacheExplicitlyProvidedForTss !== null && cacheExplicitlyProvidedForTss !== void 0 ? cacheExplicitlyProvidedForTss : getTssDefaultEmotionCache();\n}\nexports.useTssEmotionCache = useTssEmotionCache;\nfunction TssCacheProvider(props) {\n  var children = props.children,\n    value = props.value;\n  return react_1.default.createElement(reactContext.Provider, {\n    value: value\n  }, children);\n}\nexports.TssCacheProvider = TssCacheProvider;","map":null,"metadata":{},"sourceType":"script"}