{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMakeStyles = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar react_1 = require(\"react\");\nvar Object_fromEntries_1 = require(\"./tools/polyfills/Object.fromEntries\");\nvar objectKeys_1 = require(\"./tools/objectKeys\");\nvar cssAndCx_1 = require(\"./cssAndCx\");\nvar getDependencyArrayRef_1 = require(\"./tools/getDependencyArrayRef\");\nvar typeGuard_1 = require(\"./tools/typeGuard\");\nvar cache_1 = require(\"./cache\");\nvar assert_1 = require(\"./tools/assert\");\nvar mergeClasses_1 = require(\"./mergeClasses\");\nvar counter = 0;\nfunction createMakeStyles(params) {\n  var useTheme = params.useTheme;\n  /** returns useStyle. */\n  function makeStyles(params) {\n    var _ref = params !== null && params !== void 0 ? params : {},\n      nameOrWrappedName = _ref.name,\n      _ref$uniqId = _ref.uniqId,\n      uniqId = _ref$uniqId === void 0 ? counter++ : _ref$uniqId;\n    var name = typeof nameOrWrappedName !== \"object\" ? nameOrWrappedName : Object.keys(nameOrWrappedName)[0];\n    return function (cssObjectByRuleNameOrGetCssObjectByRuleName) {\n      var getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName === \"function\" ? cssObjectByRuleNameOrGetCssObjectByRuleName : function () {\n        return cssObjectByRuleNameOrGetCssObjectByRuleName;\n      };\n      return function useStyles(params, styleOverrides) {\n        var _a, _b;\n        var theme = useTheme();\n        var _ref2 = (0, cssAndCx_1.useCssAndCx)(),\n          css = _ref2.css,\n          cx = _ref2.cx;\n        var cache = (0, cache_1.useTssEmotionCache)();\n        var classes = (0, react_1.useMemo)(function () {\n          var refClassesCache = {};\n          var refClasses = typeof Proxy !== \"undefined\" && new Proxy({}, {\n            \"get\": function get(_target, propertyKey) {\n              if (typeof propertyKey === \"symbol\") {\n                (0, assert_1.assert)(false);\n              }\n              return refClassesCache[propertyKey] = \"\".concat(cache.key, \"-\").concat(uniqId).concat(name !== undefined ? \"-\".concat(name) : \"\", \"-\").concat(propertyKey, \"-ref\");\n            }\n          });\n          var cssObjectByRuleName = getCssObjectByRuleName(theme, params, refClasses || {});\n          var classes = (0, Object_fromEntries_1.objectFromEntries)((0, objectKeys_1.objectKeys)(cssObjectByRuleName).map(function (ruleName) {\n            var cssObject = cssObjectByRuleName[ruleName];\n            if (!cssObject.label) {\n              cssObject.label = \"\".concat(name !== undefined ? \"\".concat(name, \"-\") : \"\").concat(ruleName);\n            }\n            return [ruleName, \"\".concat(css(cssObject)).concat((0, typeGuard_1.typeGuard)(ruleName, ruleName in refClassesCache) ? \" \".concat(refClassesCache[ruleName]) : \"\")];\n          }));\n          (0, objectKeys_1.objectKeys)(refClassesCache).forEach(function (ruleName) {\n            if (ruleName in classes) {\n              return;\n            }\n            classes[ruleName] = refClassesCache[ruleName];\n          });\n          return classes;\n        }, [cache, css, cx, theme, (0, getDependencyArrayRef_1.getDependencyArrayRef)(params)]);\n        var propsClasses = styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.props.classes;\n        {\n          classes = (0, react_1.useMemo)(function () {\n            return (0, mergeClasses_1.mergeClasses)(classes, propsClasses, cx);\n          }, [classes, (0, getDependencyArrayRef_1.getDependencyArrayRef)(propsClasses), cx]);\n        }\n        {\n          var _cssObjectByRuleNameOrGetCssObjectByRuleName = undefined;\n          try {\n            _cssObjectByRuleNameOrGetCssObjectByRuleName = name !== undefined ? (_b = (_a = theme.components) === null || _a === void 0 ? void 0 : _a[name]) === null || _b === void 0 ? void 0 : _b.styleOverrides : undefined;\n            // eslint-disable-next-line no-empty\n          } catch (_c) {}\n          var themeClasses = (0, react_1.useMemo)(function () {\n            if (!_cssObjectByRuleNameOrGetCssObjectByRuleName) {\n              return undefined;\n            }\n            var themeClasses = {};\n            for (var ruleName in _cssObjectByRuleNameOrGetCssObjectByRuleName) {\n              var cssObjectOrGetCssObject = _cssObjectByRuleNameOrGetCssObjectByRuleName[ruleName];\n              if (!(cssObjectOrGetCssObject instanceof Object)) {\n                continue;\n              }\n              themeClasses[ruleName] = css(typeof cssObjectOrGetCssObject === \"function\" ? cssObjectOrGetCssObject(Object.assign({\n                theme: theme,\n                \"ownerState\": styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.ownerState\n              }, styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.props)) : cssObjectOrGetCssObject);\n            }\n            return themeClasses;\n          }, [_cssObjectByRuleNameOrGetCssObjectByRuleName === undefined ? undefined : JSON.stringify(_cssObjectByRuleNameOrGetCssObjectByRuleName), (0, getDependencyArrayRef_1.getDependencyArrayRef)(styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.props), (0, getDependencyArrayRef_1.getDependencyArrayRef)(styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.ownerState), css]);\n          classes = (0, react_1.useMemo)(function () {\n            return (0, mergeClasses_1.mergeClasses)(classes, themeClasses, cx);\n          }, [classes, themeClasses, cx]);\n        }\n        return {\n          classes: classes,\n          theme: theme,\n          css: css,\n          cx: cx\n        };\n      };\n    };\n  }\n  function useStyles() {\n    var theme = useTheme();\n    var _ref3 = (0, cssAndCx_1.useCssAndCx)(),\n      css = _ref3.css,\n      cx = _ref3.cx;\n    return {\n      theme: theme,\n      css: css,\n      cx: cx\n    };\n  }\n  return {\n    makeStyles: makeStyles,\n    useStyles: useStyles\n  };\n}\nexports.createMakeStyles = createMakeStyles;","map":null,"metadata":{},"sourceType":"script"}