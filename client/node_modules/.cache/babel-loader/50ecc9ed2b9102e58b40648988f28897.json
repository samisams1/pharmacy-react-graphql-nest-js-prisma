{"ast":null,"code":"import _objectSpread from \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/src/components/scensComponents/sale/SaleForm.tsx\";\nimport React from 'react';\nimport { Grid } from '@mui/material';\nimport { Form, useForm } from '../../useForm';\nimport Button from '../../Button';\nimport Controls from '../../Controls';\nimport { useMutation } from '@apollo/client';\nimport { APPOITMENT_QUERY, CREATE_APPOINTMENT } from '../../../graphql/Pharmacie';\nexport var PatientAppointmentForm = function PatientAppointmentForm() {\n  var _useMutation = useMutation(CREATE_APPOINTMENT, {\n      refetchQueries: [{\n        query: APPOITMENT_QUERY\n      }]\n    }),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    createProfile = _useMutation2[0];\n  var initialFValues = {\n    symptoms: '',\n    diagosis: '',\n    checkUpDate: '',\n    nextvist: '',\n    doctor: 1,\n    patient: 1\n  };\n  var validate = function validate() {\n    var fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    var temp = _objectSpread({}, errors);\n    if ('symptoms' in fieldValues) temp.symptoms = fieldValues.symptoms ? '' : 'This field is required.';\n    if ('diagosis' in fieldValues) temp.diagosis = fieldValues.diagosis ? '' : 'This field is required.';\n    if ('checkUpDate' in fieldValues) temp.checkUpDate = fieldValues.checkUpDate ? '' : 'This field is required.';\n    if ('nextvist' in fieldValues) temp.nextvist = fieldValues.nextvist ? '' : 'This field is required.';\n    if ('doctor' in fieldValues) temp.id = fieldValues.doctor ? '' : 'This field is required.';\n    if ('patient' in fieldValues) temp.id = fieldValues.patient ? '' : 'This field is required.';\n    setErrors(_objectSpread({}, temp));\n    //  setMessage('');\n    return fieldValues === values ? Object.values(temp).every(function (x) {\n      return x === '';\n    }) : false;\n  };\n  var _useForm = useForm(initialFValues, true, validate),\n    values = _useForm.values,\n    errors = _useForm.errors,\n    setErrors = _useForm.setErrors,\n    handleInputChange = _useForm.handleInputChange,\n    resetForm = _useForm.resetForm;\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    if (validate()) {\n      //  saveService(values);\n      createProfile({\n        variables: values\n      });\n      console.log(values);\n      resetForm();\n    }\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    name: \"symptoms\",\n    label: \"Symptoms\",\n    value: values.symptoms,\n    onChange: handleInputChange,\n    error: errors.symptoms,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    name: \"diagosis\",\n    label: \"Diagosis\",\n    value: values.diagosis,\n    onChange: handleInputChange,\n    error: errors.diagosis,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    name: \"checkUpDate\",\n    label: \"Checkup Date\",\n    value: values.checkUpDate,\n    onChange: handleInputChange,\n    error: errors.checkUpDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    name: \"nextvist\",\n    label: \"Next Vist\",\n    value: values.nextvist,\n    onChange: handleInputChange,\n    error: errors.nextvist,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    text: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\"\n    // onClick={resetForm}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  }))));\n};","map":{"version":3,"names":["React","Grid","Form","useForm","Button","Controls","useMutation","APPOITMENT_QUERY","CREATE_APPOINTMENT","PatientAppointmentForm","_useMutation","refetchQueries","query","_useMutation2","_slicedToArray","createProfile","initialFValues","symptoms","diagosis","checkUpDate","nextvist","doctor","patient","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","id","setErrors","Object","every","x","_useForm","handleInputChange","resetForm","handleSubmit","e","preventDefault","variables","console","log","createElement","onSubmit","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","Input","name","label","value","onChange","error","type","text"],"sources":["/home/samisams/TURING PROJET/PROJECTS/pharmacy/client/src/components/scensComponents/sale/SaleForm.tsx"],"sourcesContent":["import React from 'react'\nimport { Grid } from '@mui/material'\nimport { Form, useForm } from '../../useForm'\nimport Button from '../../Button'\nimport Controls from '../../Controls'\nimport { useMutation } from '@apollo/client'\nimport { appointmentInterface } from '../../../interface/interfaces'\nimport { APPOITMENT_QUERY, CREATE_APPOINTMENT } from '../../../graphql/Pharmacie'\n\nexport const PatientAppointmentForm = () => {\n  const [createProfile] = useMutation(CREATE_APPOINTMENT, {\n    refetchQueries: [{ query: APPOITMENT_QUERY }],\n  })\n  const initialFValues: appointmentInterface = {\n    symptoms: '',\n    diagosis:'',\n    checkUpDate: '',\n    nextvist:'',\n    doctor:1,\n    patient:1\n  };\n  const validate = (fieldValues: appointmentInterface = values): boolean => {\n    let temp:appointmentInterface = { ...errors };\n    if ('symptoms' in fieldValues) temp.symptoms = fieldValues.symptoms ? '' : 'This field is required.';\n    if ('diagosis' in fieldValues)  temp.diagosis =  fieldValues.diagosis ? '' : 'This field is required.';\n    if ('checkUpDate' in fieldValues) temp.checkUpDate = fieldValues.checkUpDate ? '' : 'This field is required.';\n    if ('nextvist' in fieldValues) temp.nextvist = fieldValues.nextvist ? '' : 'This field is required.';\n    if ('doctor' in fieldValues) temp.id = fieldValues.doctor ? '' : 'This field is required.';\n    if ('patient' in fieldValues) temp.id = fieldValues.patient ? '' : 'This field is required.';\n\n    setErrors({\n      ...temp\n    });\n    //  setMessage('');\n    return fieldValues === values ? Object.values(temp).every(x => x === '') : false;\n};\n\n  const { values, errors, setErrors, handleInputChange, resetForm }:any = useForm(initialFValues, true, validate);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (validate()) {\n    //  saveService(values);\n    createProfile({\n      variables: values,\n    })\n      console.log(values);\n      resetForm();\n    }\n  };\n  return (\n     <Form onSubmit={handleSubmit}>\n      <Grid item xs={12}>\n      <Grid item xs={6}>\n      <Controls.Input\n                name=\"symptoms\"\n                label=\"Symptoms\"\n                value={values.symptoms }\n                onChange={handleInputChange}\n                error={errors.symptoms}\n            />\n       <Controls.Input\n                name=\"diagosis\"\n                label=\"Diagosis\"\n               value={values.diagosis }\n                onChange={handleInputChange}\n                error={errors.diagosis}\n            />\n       <Controls.Input\n                name=\"checkUpDate\"\n                label=\"Checkup Date\"\n                value={values.checkUpDate }\n                onChange={handleInputChange}\n                error={errors.checkUpDate}\n            />\n      </Grid>\n      <Grid item xs={6}>\n    \n       <Controls.Input\n                name=\"nextvist\"\n                label=\"Next Vist\"\n                value={values.nextvist }\n                onChange={handleInputChange}\n                error={errors.nextvist}\n            />\n      \n      </Grid>\n      <Grid>\n      <Button\n        type=\"submit\"\n        text=\"Submit\" />\n         <Button\n          text=\"Reset\"\n         // onClick={resetForm}\n          />\n      </Grid>\n     \n       </Grid>\n      </Form>\n  )\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}