{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { SYMBOL_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\n * Safer version of `Array.from` that return `null` if value isn't convertible to array.\n * Also protects against Array-like objects without items.\n *\n * @example\n *\n * safeArrayFrom([ 1, 2, 3 ]) // [1, 2, 3]\n * safeArrayFrom('ABC') // null\n * safeArrayFrom({ length: 1 }) // null\n * safeArrayFrom({ length: 1, 0: 'Alpha' }) // ['Alpha']\n * safeArrayFrom({ key: 'value' }) // null\n * safeArrayFrom(new Map()) // []\n *\n */\n\nexport default function safeArrayFrom(collection) {\n  var mapFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (item) {\n    return item;\n  };\n  if (collection == null || _typeof(collection) !== 'object') {\n    return null;\n  }\n  if (Array.isArray(collection)) {\n    return collection.map(mapFn);\n  } // Is Iterable?\n\n  var iteratorMethod = collection[SYMBOL_ITERATOR];\n  if (typeof iteratorMethod === 'function') {\n    // $FlowFixMe[incompatible-use]\n    var iterator = iteratorMethod.call(collection);\n    var result = [];\n    var step;\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn(step.value, i));\n    }\n    return result;\n  } // Is Array like?\n\n  var length = collection.length;\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n    for (var _i = 0; _i < length; ++_i) {\n      if (!Object.prototype.hasOwnProperty.call(collection, _i)) {\n        return null;\n      }\n      _result.push(mapFn(collection[String(_i)], _i));\n    }\n    return _result;\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}